
  0%|          | 0/50 [00:00<?, ?it/s]
------ITER 1------
Average Score: 1.0
percentage of perfect games: 1.0

Training Net:   0%|          | 0/1 [00:01<?, ?it/s]
  0%|          | 0/50 [00:08<?, ?it/s]
Traceback (most recent call last):
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\main.py", line 40, in <module>
    main()
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\main.py", line 36, in main
    t.learn()
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\Train.py", line 67, in learn
    self.nnet.train(self.data, wandb_logger=logger)
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\NNet.py", line 63, in train
    out_pi, out_v = self.nnet(boards)
                    ^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\modules\module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\modules\module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\SudokuNNet.py", line 45, in forward
    s = F.relu(self.bn4(self.conv4(s)))                          # batch_size x num_channels x (board_x-4) x (board_y-4)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\modules\module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\modules\module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\modules\batchnorm.py", line 171, in forward
    return F.batch_norm(
           ^^^^^^^^^^^^^
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\functional.py", line 2476, in batch_norm
    _verify_batch_size(input.size())
  File "C:\Users\Danny Han\anaconda3\envs\ESE-5460_23\Lib\site-packages\torch\nn\functional.py", line 2444, in _verify_batch_size
    raise ValueError(f"Expected more than 1 value per channel when training, got input size {size}")
ValueError: Expected more than 1 value per channel when training, got input size torch.Size([1, 32, 1, 1])