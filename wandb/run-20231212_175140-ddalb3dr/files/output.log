
  0%|          | 0/1 [00:00<?, ?it/s]
  0%|          | 0/1 [00:26<?, ?it/s]
Traceback (most recent call last):
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\main.py", line 40, in <module>
    main()
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\main.py", line 36, in main
    t.learn()
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\Train.py", line 71, in learn
    self.nnet.train(self.data, wandb_logger=logger)
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\NNet.py", line 55, in train
    next_board = s.getNextState(train_boards[0], action)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\SudokuGame.py", line 43, in getNextState
    b = Board(self.n, board.copy())
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Danny Han\Desktop\alphazero-sudoku\SudokuLogic.py", line 23, in __init__
    assert initial_board.shape == (n, n), "initial_board must have the shape (n, n)"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: initial_board must have the shape (n, n)
Average Score: 1.0000099999999998
percentage of perfect games: 1.0
mean and std of values:  1.0000099999999998 2.220446049250313e-16
(5, 4, 4)
[[1. 2. 3. 4.]
 [3. 0. 2. 1.]
 [4. 3. 1. 2.]
 [2. 1. 4. 3.]]
23